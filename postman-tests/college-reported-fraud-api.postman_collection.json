{
	"info": {
		"_postman_id": "3b9c80ca-8364-4fde-aca8-9147d0a915d6",
		"name": "College Reported Fraud API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "3028762"
	},
	"item": [
		{
			"name": "get API Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response should be okay to process\", function () {",
							"    pm.response.to.not.be.error;",
							"    // pm.response.to.have.jsonBody(\"\");",
							"    pm.response.to.not.have.jsonBody(\"errors\");",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"var data = pm.response.json();",
							"// we pull this later to make requests",
							"pm.environment.set(\"ACCESS_TOKEN\", data.access_token );",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "username",
							"value": "{{API_USERNAME}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{API_PASSWORD}}",
							"type": "text"
						},
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "client_id",
							"value": "fraudReporting",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{KC_HOST}}/auth/realms/API/protocol/openid-connect/token",
					"host": [
						"{{KC_HOST}}"
					],
					"path": [
						"auth",
						"realms",
						"API",
						"protocol",
						"openid-connect",
						"token"
					]
				},
				"description": "Gets the Oauth2 token and stores in an environment variable for subsequent requests"
			},
			"response": []
		},
		{
			"name": "FraudReportSubmit",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{ACCESS_TOKEN}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation FraudReportSubmit($input: FraudReportSubmitInput!) {\n  FraudReportSubmit(input: $input) {\n    cccId\n    appId\n    fraudType\n  }\n}\n",
						"variables": "{\n  \"input\": {\n    \"cccId\": \"AAA0001\",\n    \"fraudType\": \"APPLICATION\",\n    \"appId\": 1,\n    \"reportedByMisCode\": \"ZZ1\"\n    }\n}"
					}
				},
				"url": {
					"raw": "{{GRAPHQL_URL}}",
					"host": [
						"{{GRAPHQL_URL}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "withRecipientMisCode",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{ACCESS_TOKEN}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query FraudReportQuery {\n  FraudReportQuery {\n    withRecipientMisCode {\n      submitTimestamp\n      cccId\n      reportedByMisCode\n      recipientMisCode\n      appId\n      fraudType\n      federalAid\n      ccpgAid\n      localAid\n      otherAid\n    }\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{GRAPHQL_URL}}",
					"host": [
						"{{GRAPHQL_URL}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer"
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}